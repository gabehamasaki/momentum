#!/bin/bash
set -e

echo "üîç Verificando vari√°veis de ambiente..."
echo "POSTGRES_USER: $POSTGRES_USER"
echo "POSTGRES_DB: $POSTGRES_DB"
echo ""

# Configura√ß√£o do usu√°rio root
ROOT_USER="root"
ROOT_PASSWORD="root_password_123"

# Lista dos bancos de dados que voc√™ quer criar
databases=("identity" "catalog" "orders" "payments" "analytics")

echo "üîê Criando usu√°rio root com acesso a todos os bancos..."

# Criar usu√°rio root com privil√©gios de superusu√°rio
psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
    DO \$\$
    BEGIN
        IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = '$ROOT_USER') THEN
            CREATE USER $ROOT_USER WITH
                ENCRYPTED PASSWORD '$ROOT_PASSWORD'
                SUPERUSER
                CREATEDB
                CREATEROLE
                LOGIN;
            RAISE NOTICE 'Usu√°rio root criado com privil√©gios de superusu√°rio';
        ELSE
            RAISE NOTICE 'Usu√°rio root j√° existe';
        END IF;
    END
    \$\$;
EOSQL

echo "‚úÖ Usu√°rio root criado!"
echo ""

# Configura√ß√£o dos usu√°rios (mesmo nome do banco + "_user")
for db in "${databases[@]}"; do
    db_user="${db}_user"
    db_pass="${db}_pass123"

    echo "Criando usu√°rio: $db_user"
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        DO \$\$
        BEGIN
            IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = '$db_user') THEN
                CREATE USER $db_user WITH ENCRYPTED PASSWORD '$db_pass';
                RAISE NOTICE 'Usu√°rio $db_user criado';
            ELSE
                RAISE NOTICE 'Usu√°rio $db_user j√° existe';
            END IF;
        END
        \$\$;
EOSQL

    echo "Criando banco de dados: $db"
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        -- Criar banco se n√£o existir
        SELECT 'CREATE DATABASE $db OWNER $db_user'
        WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = '$db')\gexec

        -- Conceder privil√©gios
        GRANT ALL PRIVILEGES ON DATABASE $db TO $POSTGRES_USER;
        GRANT ALL PRIVILEGES ON DATABASE $db TO $db_user;
        GRANT ALL PRIVILEGES ON DATABASE $db TO $ROOT_USER;
EOSQL

    echo "‚úÖ Banco '$db' criado com usu√°rio '$db_user'"
done

echo ""
echo "üéâ Todos os bancos de dados foram criados com sucesso!"
echo ""
echo "üìã INFORMA√á√ïES DE CONEX√ÉO:"
echo "================================="
echo "üêò USU√ÅRIO POSTGRES (Docker padr√£o):"
echo "   postgresql://postgres:postgres123@localhost:5432/[qualquer_banco]"
echo ""
echo "üëë USU√ÅRIO ROOT (acesso a todos):"
echo "   postgresql://$ROOT_USER:$ROOT_PASSWORD@localhost:5432/[qualquer_banco]"
echo ""
echo "üóÑÔ∏è  USU√ÅRIOS ESPEC√çFICOS:"
for db in "${databases[@]}"; do
    db_user="${db}_user"
    db_pass="${db}_pass123"
    echo "   $db: postgresql://$db_user:$db_pass@localhost:5432/$db"
done
